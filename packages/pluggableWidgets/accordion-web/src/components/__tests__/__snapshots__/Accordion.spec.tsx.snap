// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accordion in collapsible & multiple expanded group mode allows multiple groups to be expanded 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": true,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={false}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={false}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={false}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header2
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content2
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & multiple expanded group mode collapses a group 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": true,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={false}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group widget-accordion-group-collapsed"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={false}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header2
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content2
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & multiple expanded group mode expands a group 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": false,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={false}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={false}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={false}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={false}
      />
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & multiple expanded group mode renders correctly 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": false,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={false}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group widget-accordion-group-collapsed"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={false}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={false}
      />
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & single expanded group mode allows one group to be expanded only 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": true,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={true}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group widget-accordion-group-collapsed"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={false}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header2
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content2
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & single expanded group mode collapses a group 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
        Array [
          false,
        ],
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": false,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={true}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group widget-accordion-group-collapsed"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
            Array [
              false,
            ],
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={false}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
              Array [
                false,
              ],
              Array [
                true,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={false}
      />
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & single expanded group mode expands a group 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          false,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": false,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={true}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={false}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
            Array [
              true,
            ],
            Array [
              false,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={false}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
              Array [
                true,
              ],
              Array [
                false,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={false}
      />
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion in collapsible & single expanded group mode renders correctly 1`] = `
<Accordion
  class=""
  collapsible={true}
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": false,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  singleExpandedGroup={true}
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header"
        key="0"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={true}
      >
        <section
          className="widget-accordion-group widget-accordion-group-collapsed"
        >
          <header
            className="widget-accordion-group-header widget-accordion-group-header-clickable widget-accordion-group-header-icon-right"
            onClick={[Function]}
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={true}
      collapsedAccordionGroupsDispatch={[Function]}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={
        [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={false}
    >
      <AccordionGroup
        collapsed={true}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={
          [MockFunction] {
            "calls": Array [
              Array [
                true,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        header="header2"
        key="1"
        showHeaderIcon="right"
        toggleCollapsed={[Function]}
        visible={false}
      />
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;

exports[`Accordion not collapsible renders correctly 1`] = `
<Accordion
  class=""
  collapsible={false}
  generateHeaderIcon={[MockFunction]}
  groups={
    Array [
      Object {
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      },
      Object {
        "content": <span>
          content2
        </span>,
        "header": "header2",
        "visible": false,
      },
    ]
  }
  id="id"
  showGroupHeaderIcon="right"
  style={
    Object {
      "height": "500px",
    }
  }
  tabIndex={1}
>
  <div
    className="widget-accordion"
    id="id"
    style={
      Object {
        "height": "500px",
      }
    }
    tabIndex={1}
  >
    <AccordionGroupWrapper
      collapsed={false}
      content={
        <span>
          content
        </span>
      }
      generateIcon={[MockFunction]}
      header="header"
      index={0}
      key="0"
      showHeaderIcon="right"
      visible={true}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content
          </span>
        }
        generateIcon={[MockFunction]}
        header="header"
        key="0"
        showHeaderIcon="right"
        visible={true}
      >
        <section
          className="widget-accordion-group"
        >
          <header
            className="widget-accordion-group-header"
          >
            header
          </header>
          <div
            className="widget-accordion-group-content-wrapper"
            onTransitionEnd={[Function]}
          >
            <div
              className="widget-accordion-group-content"
            >
              <span>
                content
              </span>
            </div>
          </div>
        </section>
      </AccordionGroup>
    </AccordionGroupWrapper>
    <AccordionGroupWrapper
      collapsed={false}
      content={
        <span>
          content2
        </span>
      }
      generateIcon={[MockFunction]}
      header="header2"
      index={1}
      key="1"
      showHeaderIcon="right"
      visible={false}
    >
      <AccordionGroup
        collapsed={false}
        content={
          <span>
            content2
          </span>
        }
        generateIcon={[MockFunction]}
        header="header2"
        key="1"
        showHeaderIcon="right"
        visible={false}
      />
    </AccordionGroupWrapper>
  </div>
</Accordion>
`;
