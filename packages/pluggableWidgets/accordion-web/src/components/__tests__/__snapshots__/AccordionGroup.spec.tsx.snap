// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccordionGroup doesn't render when the group isn't visible 1`] = `""`;

exports[`AccordionGroup with dispatch displays the content when the group becomes visible and is expanded 1`] = `
<TestWrapper
  dispatch={[MockFunction]}
  group={
    Object {
      "collapsed": false,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <AccordionGroup
    group={
      Object {
        "collapsed": false,
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      }
    }
  >
    <section>
      <header
        onClick={[Function]}
      >
        header
      </header>
      <div
        style={
          Object {
            "display": undefined,
          }
        }
      >
        <span>
          content
        </span>
      </div>
    </section>
  </AccordionGroup>
</TestWrapper>
`;

exports[`AccordionGroup with dispatch displays the content when the group is visible and expanded 1`] = `
<TestWrapper
  dispatch={[MockFunction]}
  group={
    Object {
      "collapsed": false,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <AccordionGroup
    group={
      Object {
        "collapsed": false,
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      }
    }
  >
    <section>
      <header
        onClick={[Function]}
      >
        header
      </header>
      <div
        style={
          Object {
            "display": undefined,
          }
        }
      >
        <span>
          content
        </span>
      </div>
    </section>
  </AccordionGroup>
</TestWrapper>
`;

exports[`AccordionGroup with dispatch displays the content when the group is visible and gets expanded 1`] = `
<TestWrapper
  dispatch={[MockFunction]}
  group={
    Object {
      "collapsed": false,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <AccordionGroup
    group={
      Object {
        "collapsed": false,
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      }
    }
  >
    <section>
      <header
        onClick={[Function]}
      >
        header
      </header>
      <div
        style={
          Object {
            "display": undefined,
          }
        }
      >
        <span>
          content
        </span>
      </div>
    </section>
  </AccordionGroup>
</TestWrapper>
`;

exports[`AccordionGroup with dispatch keeps the content in DOM when the group is visible and gets collapsed 1`] = `
<TestWrapper
  dispatch={[MockFunction]}
  group={
    Object {
      "collapsed": true,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <AccordionGroup
    group={
      Object {
        "collapsed": true,
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      }
    }
  >
    <section>
      <header
        onClick={[Function]}
      >
        header
      </header>
      <div
        style={
          Object {
            "display": "none",
          }
        }
      >
        <span>
          content
        </span>
      </div>
    </section>
  </AccordionGroup>
</TestWrapper>
`;

exports[`AccordionGroup with dispatch loads the content lazily when the group becomes visible and is collapsed 1`] = `
<TestWrapper
  dispatch={[MockFunction]}
  group={
    Object {
      "collapsed": true,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <AccordionGroup
    group={
      Object {
        "collapsed": true,
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      }
    }
  >
    <section>
      <header
        onClick={[Function]}
      >
        header
      </header>
      <div
        style={
          Object {
            "display": "none",
          }
        }
      />
    </section>
  </AccordionGroup>
</TestWrapper>
`;

exports[`AccordionGroup with dispatch loads the content lazily when the group is visible and collapsed 1`] = `
<TestWrapper
  dispatch={[MockFunction]}
  group={
    Object {
      "collapsed": true,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <AccordionGroup
    group={
      Object {
        "collapsed": true,
        "content": <span>
          content
        </span>,
        "header": "header",
        "visible": true,
      }
    }
  >
    <section>
      <header
        onClick={[Function]}
      >
        header
      </header>
      <div
        style={
          Object {
            "display": "none",
          }
        }
      />
    </section>
  </AccordionGroup>
</TestWrapper>
`;

exports[`AccordionGroup without dispatch displays the content when the group becomes visible 1`] = `
<AccordionGroup
  group={
    Object {
      "collapsed": false,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <section>
    <header>
      header
    </header>
    <div
      style={
        Object {
          "display": undefined,
        }
      }
    >
      <span>
        content
      </span>
    </div>
  </section>
</AccordionGroup>
`;

exports[`AccordionGroup without dispatch displays the content when the group is visible 1`] = `
<AccordionGroup
  group={
    Object {
      "collapsed": false,
      "content": <span>
        content
      </span>,
      "header": "header",
      "visible": true,
    }
  }
>
  <section>
    <header>
      header
    </header>
    <div
      style={
        Object {
          "display": undefined,
        }
      }
    >
      <span>
        content
      </span>
    </div>
  </section>
</AccordionGroup>
`;
