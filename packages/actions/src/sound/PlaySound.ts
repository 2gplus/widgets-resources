// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the code between BEGIN USER CODE and END USER CODE
// Other code you write will be lost the next time you deploy the project.

import ReactNativeSound from "react-native-sound";

/**
 * Info about supported audio file formats:
 * - iOS: https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/CoreAudioOverview/SupportedAudioFormatsMacOSX/SupportedAudioFormatsMacOSX.html
 * - Android: https://developer.android.com/guide/topics/media/media-formats.html
 * @param {MxObject} audioFile - This field is required.
 * @returns {boolean}
 */
function PlaySound(audioFile?: mendix.lib.MxObject): Promise<void> {
    // BEGIN USER CODE
    // Documentation https://github.com/zmxv/react-native-sound

    const Sound: typeof ReactNativeSound = require("react-native-sound");

    if (!audioFile) {
        throw new TypeError("Input parameter 'Audio file' is required");
    }

    if (!audioFile.inheritsFrom("System.FileDocument")) {
        const entity = audioFile.getEntity();
        throw new TypeError(`Entity ${entity} does not inherit from 'System.FileDocument'`);
    }

    return new Promise((resolve, reject) => {
        const guid = audioFile.getGuid();
        const changedDate = audioFile.get("changedDate") as number;
        const url = mx.data.getDocumentUrl(guid, changedDate);

        const audio = new Sound(url, undefined, error => {
            if (error) {
                return reject(error);
            }

            audio.play(success => {
                audio.release();
                if (success) {
                    return resolve();
                }
                return reject("Playback failed due to an audio encoding error");
            });
        });
    });

    // END USER CODE
}
